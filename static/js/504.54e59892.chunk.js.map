{"version":3,"file":"static/js/504.54e59892.chunk.js","mappings":"yOAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAA5B,EAEtBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,SAA5B,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,KAA5B,EAEnBC,EAAe,SAAAP,GAAK,OAAIA,EAAMC,SAASO,MAAnB,EAGpBC,GAAwBC,EAAAA,EAAAA,IACnC,CAACX,EAAgBQ,IACjB,SAACN,EAAUO,GACT,OAAOP,EAASO,QAAO,SAAAG,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cADf,GAG/B,I,yDCfUE,EAAOC,EAAAA,EAAAA,KAAH,yHAOJC,EAASD,EAAAA,EAAAA,GAAH,iIAONE,EAAQF,EAAAA,EAAAA,MAAH,0MAWLG,EAASH,EAAAA,EAAAA,OAAH,qY,UCpBJ,SAASI,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXrB,GAAWsB,EAAAA,EAAAA,IAAYxB,GA2B7B,OACE,UAACgB,EAAD,CAAMS,SAzBR,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OAGjB3B,EAAS4B,KAAI,SAAAlB,GAAO,OAAIA,EAAQC,IAAZ,IAAkBE,SAASa,EAAKG,SAASlB,KAAKmB,OAElEC,IAAAA,OAAAA,QAAA,UACKL,EAAKG,SAASlB,KAAKmB,MADxB,6BAIAV,GACEY,EAAAA,EAAAA,IAAW,CACTrB,KAAMe,EAAKG,SAASlB,KAAKmB,MACzBG,OAAQP,EAAKG,SAASI,OAAOH,SAKnCJ,EAAKQ,OACN,EAIC,WACE,SAAClB,EAAD,oBACA,SAACC,EAAD,CACEkB,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAACtB,EAAD,sBACA,SAACC,EAAD,CACEkB,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAACpB,EAAD,CAAQiB,KAAK,SAAb,2BAGL,C,oCCvDYI,EAAYxB,EAAAA,EAAAA,IAAH,yHAOTyB,EAAOzB,EAAAA,EAAAA,EAAH,iIAOJE,EAAQF,EAAAA,EAAAA,MAAH,0MCTL0B,EAAS,WACpB,IAAMrB,GAAWC,EAAAA,EAAAA,MACXd,GAASe,EAAAA,EAAAA,IAAYhB,GAO3B,OACE,UAACiC,EAAD,YACE,SAACC,EAAD,qCACA,SAAC,EAAD,CAAOL,KAAK,OAAOL,MAAOvB,EAAQmC,SAPtC,SAAsBlB,GACpBJ,GAASuB,EAAAA,EAAAA,GAAenB,EAAMoB,cAAcd,OAC7C,MAQF,ECpBYU,EAAOzB,EAAAA,EAAAA,EAAH,yGAMJ8B,EAAS9B,EAAAA,EAAAA,OAAH,wYCFN+B,EAAc,SAAC,GAAiB,IAAfpC,EAAc,EAAdA,QACtBU,GAAWC,EAAAA,EAAAA,MAQjB,OACE,iCACE,UAAC,EAAD,WACGX,EAAQC,KADX,KACmBD,EAAQuB,WAE3B,SAACY,EAAD,CAAQE,QAVZ,WACE3B,GAAS4B,EAAAA,EAAAA,IAActC,EAAQuC,IAChC,EAQG,sBAGL,ECrBYC,EAAOnC,EAAAA,EAAAA,GAAH,yHAOJoC,EAAOpC,EAAAA,EAAAA,GAAH,gHAOJqC,EAASrC,EAAAA,EAAAA,EAAH,mJCVNsC,EAAe,WAC1B,IAAMrD,GAAWsB,EAAAA,EAAAA,IAAYd,GAG7B,OAAOR,EAASsD,OAAS,GACvB,SAACJ,EAAD,UACGlD,EAAS4B,KAAI,SAAAlB,GAAO,OACnB,SAACyC,EAAD,WACE,SAACL,EAAD,CAAapC,QAASA,KADbA,EAAQuC,GADA,OAOvB,SAACG,EAAD,sDAEH,ECnBYb,EAAYxB,EAAAA,EAAAA,IAAH,oKASTC,EAASD,EAAAA,EAAAA,GAAH,wJAQNwC,EAASxC,EAAAA,EAAAA,IAAH,mHCPJ,SAASyC,KACtB,IAAMpC,GAAWC,EAAAA,EAAAA,MAEXlB,GAAYmB,EAAAA,EAAAA,IAAYpB,GACxBG,GAAQiB,EAAAA,EAAAA,IAAYlB,GAM1B,OAJAqD,EAAAA,EAAAA,YAAU,WACRrC,GAASsC,EAAAA,EAAAA,MACV,GAAE,CAACtC,KAGF,UAAC,EAAD,YACE,SAAC,EAAD,yBACA,SAACD,EAAD,KAEA,SAAC,EAAD,wBACA,SAACsB,EAAD,IAECtC,IAAcE,GACb,SAACkD,EAAD,WACE,SAAC,IAAD,CAAYI,MAAM,eAGpB,SAACN,EAAD,MAIP,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.contacts.filter;\n\n//----Получаем подходящие контакты----\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  padding: 10px;\n  border: 1.5px solid #2f9e99;\n  border-radius: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const Header = styled.h2`\n  font-size: 22px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  font-family: Andale Mono, monospace;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 435px;\n  padding: 0 20px;\n  margin-bottom: 10px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-radius: 20px;\n  border: 1px solid coral;\n`;\n\nexport const Submit = styled.button`\n  display: flex;\n  margin: 0 auto;\n  height: 20px;\n  padding: 15px;\n  font-family: Andale Mono, monospace;\n  font-size: 18px;\n\n  border-radius: 20px;\n  border-style: none;\n  align-items: center;\n  cursor: pointer;\n\n  background-color: #f69a73;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  :hover,\n  :focus {\n    background-color: coral;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport Notiflix from 'notiflix';\n\nimport { Form, Header, Input, Submit } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  //----Добавляем контакты----\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    const form = event.target;\n\n    if (\n      contacts.map(contact => contact.name).includes(form.elements.name.value)\n    ) {\n      Notiflix.Notify.failure(\n        `${form.elements.name.value} is already in contacts.`\n      );\n    } else {\n      dispatch(\n        addContact({\n          name: form.elements.name.value,\n          number: form.elements.number.value,\n        })\n      );\n    }\n\n    form.reset();\n  }\n\n  //----Рендер----\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Header>Name</Header>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Header>Number</Header>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Submit type=\"submit\">Add contact</Submit>\n    </Form>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 10px;\n  border: 1.5px solid #2f9e99;\n  border-radius: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 22px;\n  font-weight: 400;\n  margin-bottom: 10px;\n  font-family: Andale Mono, monospace;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  width: 435px;\n  padding: 0 20px;\n  margin-bottom: 10px;\n  background: #e9eff6;\n  line-height: 40px;\n  border-radius: 20px;\n  border: 1px solid coral;\n`;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { Text, Container, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  //----Обновляем фильтр----\n  function changeFilter(event) {\n    dispatch(contactsFilter(event.currentTarget.value));\n  }\n\n  return (\n    <Container>\n      <Text>Find contacts by name</Text>\n      <Input type=\"text\" value={filter} onChange={changeFilter} />\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Text = styled.p`\n  font-size: 22px;\n  font-weight: 400;\n  font-family: Andale Mono, monospace;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  margin-left: auto;\n  height: 20px;\n  padding: 15px;\n  font-family: Andale Mono, monospace;\n  font-size: 18px;\n\n  border-radius: 20px;\n  border-style: none;\n  align-items: center;\n  cursor: pointer;\n\n  background-color: #f69a73;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n  :hover,\n  :focus {\n    background-color: coral;\n  }\n`;\n\n// export const Item = styled.li`\n//   display: flex;\n//   align-items: center;\n//   padding: 10px;\n//   justify-content: center;\n// `;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nimport { Text, Button } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  //----Удаляем контакты----\n  function handleDelete() {\n    dispatch(deleteContact(contact.id));\n  }\n\n  //----Рендер----\n  return (\n    <>\n      <Text>\n        {contact.name}: {contact.number}\n      </Text>\n      <Button onClick={handleDelete}>Delete</Button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 10px;\n  border: 1.5px solid #2f9e99;\n  border-radius: 8px;\n  margin-bottom: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  justify-content: center;\n`;\n\nexport const Notice = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  text-align: center;\n  font-family: Courier New, monospace;\n  color: #2f9e99;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { ContactItem } from '../ContactItem/ContactItem';\nimport { List, Item, Notice } from './ContactsList.styled';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  //----Рендер----\n  return contacts.length > 0 ? (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          <ContactItem contact={contact} />\n        </Item>\n      ))}\n    </List>\n  ) : (\n    <Notice>There is nothing to show... ☹️</Notice>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 30px auto;\n  padding: 10px;\n  width: 500px;\n  background-color: #d7f7f7;\n  border: 2px solid #2f9e99;\n  border-radius: 8px;\n`;\n\nexport const Header = styled.h1`\n  font-size: 30px;\n  font-weight: 700;\n  margin-bottom: 10px;\n  text-align: center;\n  font-family: Courier New, monospace;\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  justify-content: center;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport SyncLoader from 'react-spinners/SyncLoader';\n\nimport ContactForm from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactsList } from '../../components/ContactsList/ContactsList';\n\nimport { Container, Header, Loader } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Header>Phonebook</Header>\n      <ContactForm />\n\n      <Header>Contacts</Header>\n      <Filter />\n\n      {isLoading && !error ? (\n        <Loader>\n          <SyncLoader color=\"#2f9e99\" />\n        </Loader>\n      ) : (\n        <ContactsList />\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","Form","styled","Header","Input","Submit","ContactForm","dispatch","useDispatch","useSelector","onSubmit","event","preventDefault","form","target","map","elements","value","Notiflix","addContact","number","reset","type","pattern","title","required","Container","Text","Filter","onChange","contactsFilter","currentTarget","Button","ContactItem","onClick","deleteContact","id","List","Item","Notice","ContactsList","length","Loader","Contacts","useEffect","fetchContacts","color"],"sourceRoot":""}